                            | # Execution begins at address 0
0x000:                      |     .pos 0
0x000: 30f40002000000000000 |     irmovq stack,%rsp
0x00a: 804800000000000000   |     call main
0x013: 00                   |     halt
                            | 
                            | # array to be sorted
0x018:                      |     .align 8
0x018:                      | Array:
0x018: ca0b000000000000     |     .quad 0xbca
0x020: ba0c000000000000     |     .quad 0xcba
0x028: cb0a000000000000     |     .quad 0xacb
0x030: ab0c000000000000     |     .quad 0xcab
0x038: bc0a000000000000     |     .quad 0xabc
0x040: ac0b000000000000     |     .quad 0xbac
                            | 
0x048:                      | main:
0x048: 30f71800000000000000 |     irmovq Array,%rdi
0x052: 30f60600000000000000 |     irmovq $6,%rsi
0x05c: 806600000000000000   |     call bubble_sort
0x065: 90                   |     ret
                            | 
                            | # bubble_sort(long *data, long count)
                            | # data in %rdi, count in %rsi
                            | 
0x066:                      | bubble_sort:
0x066: 2070                 |     rrmovq %rdi,%rax # last in %rax
0x068: 6066                 |     addq %rsi,%rsi
0x06a: 6066                 |     addq %rsi,%rsi
0x06c: 6066                 |     addq %rsi,%rsi # i * 8
0x06e: 6060                 |     addq %rsi,%rax
0x070: 30f80800000000000000 |     irmovq $8,%r8
0x07a: 6180                 |     subq %r8,%rax # last = data + count - 1
0x07c: 70f800000000000000   |     jmp test
0x085:                      | loop:
0x085: 2072                 |     rrmovq %rdi,%rdx # i in %rdx
0x087: 70df00000000000000   |     jmp test2
0x090:                      | loop2:
0x090: 2029                 |     rrmovq %rdx,%r9
0x092: 50a90000000000000000 |     mrmovq (%r9),%r10 # *i in %r10
0x09c: 30f80800000000000000 |     irmovq $8,%r8
0x0a6: 6089                 |     addq %r8,%r9 # i + 1 in %r9
0x0a8: 50b90000000000000000 |     mrmovq (%r9),%r11 # *(i + 1) in %r11
0x0b2: 20bc                 |     rrmovq %r11,%r12
0x0b4: 61ac                 |     subq %r10,%r12
0x0b6: 75d300000000000000   |     jge else
0x0bf: 40b20000000000000000 |     rmmovq %r11,(%rdx)
0x0c9: 40a90000000000000000 |     rmmovq %r10,(%r9)
0x0d3:                      | else:
0x0d3: 30f80800000000000000 |     irmovq $8,%r8
0x0dd: 6082                 |     addq %r8,%rdx
0x0df:                      | test2:
0x0df: 2021                 |     rrmovq %rdx,%rcx
0x0e1: 6101                 |     subq %rax,%rcx
0x0e3: 729000000000000000   |     jl loop2
0x0ec: 30f80800000000000000 |     irmovq $8,%r8
0x0f6: 6180                 |     subq %r8,%rax
0x0f8:                      | test:
0x0f8: 2008                 |     rrmovq %rax,%r8
0x0fa: 6178                 |     subq %rdi,%r8
0x0fc: 768500000000000000   |     jg loop
0x105: 90                   |     ret
                            | 
0x200:                      |     .pos 0x200
0x200:                      | stack:
